{"version":3,"file":"static/js/Cart.fae4a658.chunk.js","mappings":"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","sources":["components/CartEmpty.tsx","components/Confirm/index.tsx","components/CartItem.tsx","pages/Cart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport emptyCartImg from '../assets/img/empty-cart.png';\r\n\r\nfunction CartEmpty() {\r\n  return (\r\n    <div className=\"container container--cart\">\r\n      <div className=\"cart cart--empty\">\r\n        <h2>\r\n          –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è <span>üòï</span>\r\n        </h2>\r\n        <p>\r\n          –í–µ—Ä–æ—è—Ç–Ω–µ–π –≤—Å–µ–≥–æ, –≤—ã –Ω–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏ –µ—â—ë –ø–∏—Ü—Ü—É.\r\n          <br />\r\n          –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É, –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.\r\n        </p>\r\n        <img src={emptyCartImg} alt=\"Empty cart\" />\r\n        <Link to=\"/\" className=\"button button--black\">\r\n          <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartEmpty;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useEffect, useRef } from 'react';\r\nimport './Confirm.scss';\r\n\r\ninterface IConfirmProps {\r\n  title?: string;\r\n  name: string;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n}\r\n\r\nfunction Confirm({ onClose, onConfirm, title, name }: IConfirmProps) {\r\n  const isMounted = useRef(false);\r\n  const modal = useRef<HTMLDivElement | null>(null);\r\n  const modalContent = useRef<HTMLDivElement | null>(null);\r\n  const closeBtn = useRef<HTMLButtonElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const handleSortOutside = (event: MouseEvent) => {\r\n      if (\r\n        modal.current &&\r\n        modalContent.current &&\r\n        !event.composedPath().includes(modalContent.current) &&\r\n        isMounted.current\r\n      ) {\r\n        close(onClose);\r\n      }\r\n      isMounted.current = true;\r\n    };\r\n    document.body.addEventListener('click', handleSortOutside);\r\n    return () => document.body.removeEventListener('click', handleSortOutside);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      modal.current?.classList.remove('hide-modal');\r\n      modalContent.current?.classList.remove('hide-content');\r\n    });\r\n    closeBtn.current?.focus();\r\n  }, []);\r\n\r\n  const close = (fn: () => void) => {\r\n    modal.current?.classList.add('hide-modal');\r\n    modalContent.current?.classList.add('hide-content');\r\n    setTimeout(() => {\r\n      fn();\r\n    }, 300);\r\n  };\r\n\r\n  const hendleKeyDown = ({ key }: React.KeyboardEvent) => {\r\n    if (key === 'Escape') {\r\n      close(onClose);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={modal} onKeyDown={hendleKeyDown} className=\"modal hide-modal\">\r\n      <div ref={modalContent} className=\"modal__content\">\r\n        <h2 className=\"modal__title\">\r\n          –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å\r\n          {name === 'basket' ? ' –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ä–∑–∏–Ω—ã' : ` –ø–∏—Ü—Ü—É \"${title}\"`}?\r\n        </h2>\r\n        <hr />\r\n        <div className=\"modal__controllers\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"button button--outline button--add go-back-btn\"\r\n            onClick={() => close(onConfirm)}\r\n          >\r\n            –£–¥–∞–ª–∏—Ç—å\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            ref={closeBtn}\r\n            className=\"button pay-btn\"\r\n            onClick={() => close(onClose)}\r\n          >\r\n            –û—Ç–º–µ–Ω–∞\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Confirm;\r\n","import { useState } from 'react';\r\nimport { useAppDispatch } from '../hooks/redux';\r\nimport { ICartItem } from '../models/cart';\r\nimport { addItem, removeItem, subtractItem } from '../redux/slices/cartSlice';\r\nimport Confirm from './Confirm';\r\n\r\nfunction CartItem({ id, title, type, size, price, count, imageUrl }: ICartItem) {\r\n  const dispatch = useAppDispatch();\r\n  const item = {\r\n    id,\r\n    title,\r\n    price,\r\n    imageUrl,\r\n    type,\r\n    size,\r\n    count,\r\n  };\r\n  const [isModal, setIsModal] = useState<boolean>(false);\r\n\r\n  const onAddItem = () => dispatch(addItem(item));\r\n  const onSubtractItem = () => dispatch(subtractItem(item));\r\n  const handleConfirm = () => {\r\n    setIsModal(false);\r\n    dispatch(removeItem(item));\r\n  };\r\n\r\n  const handleClose = () => setIsModal(false);\r\n\r\n  return (\r\n    <div className=\"cart__item\">\r\n      <div className=\"cart__content\">\r\n        <div className=\"cart__item-img\">\r\n          <img\r\n            className=\"pizza-block__image\"\r\n            src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n            alt=\"Pizza\"\r\n          />\r\n        </div>\r\n        <div className=\"cart__item-info\">\r\n          <h3>{title}</h3>\r\n          <p>\r\n            {type}, {size} —Å–º.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"cart__controllers\">\r\n        <div className=\"cart__item-count\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSubtractItem}\r\n            className=\"button button--outline button--circle cart__item-count-minus\"\r\n          >\r\n            <svg\r\n              width=\"10\"\r\n              height=\"10\"\r\n              viewBox=\"0 0 10 10\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                fill=\"#EB5A1E\"\r\n              ></path>\r\n              <path\r\n                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                fill=\"#EB5A1E\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n          <b>{count}</b>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onAddItem}\r\n            className=\"button button--outline button--circle cart__item-count-plus\"\r\n          >\r\n            <svg\r\n              width=\"10\"\r\n              height=\"10\"\r\n              viewBox=\"0 0 10 10\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                fill=\"#EB5A1E\"\r\n              ></path>\r\n              <path\r\n                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                fill=\"#EB5A1E\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className=\"cart__item-price\">\r\n          <b>{price} ‚ÇΩ</b>\r\n        </div>\r\n        <div className=\"cart__item-remove\">\r\n          <button\r\n            onClick={() => setIsModal(true)}\r\n            type=\"button\"\r\n            className=\"button button--outline button--circle\"\r\n          >\r\n            <svg\r\n              width=\"10\"\r\n              height=\"10\"\r\n              viewBox=\"0 0 10 10\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                fill=\"#EB5A1E\"\r\n              ></path>\r\n              <path\r\n                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                fill=\"#EB5A1E\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isModal && <Confirm name=\"\" onClose={handleClose} onConfirm={handleConfirm} title={title} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CartEmpty from '../components/CartEmpty';\r\nimport CartItem from '../components/CartItem';\r\nimport Confirm from '../components/Confirm';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\r\nimport { clearItems } from '../redux/slices/cartSlice';\r\n\r\nfunction Cart() {\r\n  const dispatch = useAppDispatch();\r\n  const { items, totalPrice, cartCnt } = useAppSelector((state) => state.cartReducer);\r\n  const [isModal, setIsModal] = useState<boolean>(false);\r\n\r\n  const handleConfirm = () => {\r\n    setIsModal(false);\r\n    dispatch(clearItems());\r\n  };\r\n\r\n  const handleClose = () => setIsModal(false);\r\n\r\n  if (!cartCnt) {\r\n    return <CartEmpty />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container container--cart\">\r\n      <div className=\"cart\">\r\n        <div className=\"cart__top\">\r\n          <h2 className=\"content__title\">\r\n            <svg\r\n              width=\"18\"\r\n              height=\"18\"\r\n              viewBox=\"0 0 18 18\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"1.8\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n              <path\r\n                d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"1.8\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n              <path\r\n                d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"1.8\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n            </svg>\r\n            –ö–æ—Ä–∑–∏–Ω–∞\r\n          </h2>\r\n          <button type=\"button\" onClick={() => setIsModal(true)} className=\"cart__clear\">\r\n            <svg\r\n              width=\"20\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M2.5 5H4.16667H17.5\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n              <path\r\n                d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n              <path\r\n                d=\"M8.33337 9.16667V14.1667\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n              <path\r\n                d=\"M11.6666 9.16667V14.1667\"\r\n                stroke=\"#B6B6B6\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              ></path>\r\n            </svg>\r\n\r\n            <span>–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É</span>\r\n          </button>\r\n          {isModal && <Confirm name=\"basket\" onClose={handleClose} onConfirm={handleConfirm} />}\r\n        </div>\r\n        <div className=\"content__items\">\r\n          {items.map((item) => (\r\n            <CartItem key={item.id + item.size + item.type} {...item} />\r\n          ))}\r\n        </div>\r\n        <div className=\"cart__bottom\">\r\n          <div className=\"cart__bottom-details\">\r\n            <span>\r\n              –í—Å–µ–≥–æ –ø–∏—Ü—Ü: <b>{cartCnt} —à—Ç.</b>\r\n            </span>\r\n            <span>\r\n              –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: <b>{totalPrice} ‚ÇΩ</b>\r\n            </span>\r\n          </div>\r\n          <div className=\"cart__bottom-buttons\">\r\n            <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n              <svg\r\n                width=\"8\"\r\n                height=\"14\"\r\n                viewBox=\"0 0 8 14\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M7 13L1 6.93015L6.86175 1\"\r\n                  stroke=\"#D3D3D3\"\r\n                  strokeWidth=\"1.5\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                ></path>\r\n              </svg>\r\n\r\n              <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥</span>\r\n            </Link>\r\n            <button type=\"button\" className=\"button pay-btn\">\r\n              <span>–û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n"],"names":["_jsx","className","children","_jsxs","src","emptyCartImg","alt","Link","to","_ref","onClose","onConfirm","title","name","isMounted","useRef","modal","modalContent","closeBtn","useEffect","handleSortOutside","event","current","composedPath","includes","close","document","body","addEventListener","removeEventListener","_closeBtn$current","setTimeout","_modal$current","_modalContent$current","classList","remove","focus","fn","_modal$current2","_modalContent$current2","add","ref","onKeyDown","_ref2","key","concat","type","onClick","id","size","price","count","imageUrl","dispatch","useAppDispatch","item","_useState","useState","_useState2","_slicedToArray","isModal","setIsModal","subtractItem","width","height","viewBox","fill","xmlns","d","addItem","Confirm","removeItem","_useAppSelector","useAppSelector","state","cartReducer","items","totalPrice","cartCnt","stroke","strokeWidth","strokeLinecap","strokeLinejoin","clearItems","map","CartItem","_objectSpread","CartEmpty"],"sourceRoot":""}